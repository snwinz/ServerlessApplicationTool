{
  "service": {
    "service": "allDefs",
    "serviceObject": {
      "name": "allDefs"
    },
    "provider": {
      "stage": "beta",
      "variableSyntax": "\\${([^{}]+?)}",
      "region": "eu-central-1",
      "name": "aws",
      "runtime": "nodejs12.x",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "lambda:InvokeFunction",
            "lambda:InvokeAsync",
            "dynamodb:PutItem",
            "dynamodb:GetItem"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CallerUnderscoreADLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Caller_AD"
            }
          },
          "Callee1UnderscoreADLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Callee1_AD"
            }
          },
          "Callee2UnderscoreADLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Callee2_AD"
            }
          },
          "WriterUnderscoreADLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Writer_AD"
            }
          },
          "Getter1UnderscoreADLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Getter1_AD"
            }
          },
          "Getter2UnderscoreADLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Getter2_AD"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "allDefs",
                        "beta",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Caller_AD:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Callee1_AD:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Callee2_AD:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Writer_AD:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Getter1_AD:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Getter2_AD:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Caller_AD:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Callee1_AD:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Callee2_AD:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Writer_AD:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Getter1_AD:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Getter2_AD:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "allDefs",
                    "beta",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CallerUnderscoreADLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/allDefs/beta/1598613198473-2020-08-28T11:13:18.473Z/allDefs.zip"
              },
              "FunctionName": "Caller_AD",
              "Handler": "Caller_AD.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "CallerUnderscoreADLogGroup"
            ]
          },
          "CallerUnderscoreADLambdaVersionUk0Z1Ec5vVqOIKXfPvvvcwhO2zadikJbByRYaQL0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CallerUnderscoreADLambdaFunction"
              },
              "CodeSha256": "kCjL/iMsbnL7xKx2b7ddCcw/gi5hC89rTLUDY6ueHog="
            }
          },
          "Callee1UnderscoreADLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/allDefs/beta/1598613198473-2020-08-28T11:13:18.473Z/allDefs.zip"
              },
              "FunctionName": "Callee1_AD",
              "Handler": "Callee1_AD.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "Callee1UnderscoreADLogGroup"
            ]
          },
          "Callee1UnderscoreADLambdaVersion9uDLZpoj4Q3tu7dUg82lVrjSh1bDDAevR91oG6B8Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Callee1UnderscoreADLambdaFunction"
              },
              "CodeSha256": "kCjL/iMsbnL7xKx2b7ddCcw/gi5hC89rTLUDY6ueHog="
            }
          },
          "Callee2UnderscoreADLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/allDefs/beta/1598613198473-2020-08-28T11:13:18.473Z/allDefs.zip"
              },
              "FunctionName": "Callee2_AD",
              "Handler": "Callee2_AD.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "Callee2UnderscoreADLogGroup"
            ]
          },
          "Callee2UnderscoreADLambdaVersionS9Dt1VHf5eFz8AZXwtJNvWLgRpGkKSnaSdneKbrPgBA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Callee2UnderscoreADLambdaFunction"
              },
              "CodeSha256": "kCjL/iMsbnL7xKx2b7ddCcw/gi5hC89rTLUDY6ueHog="
            }
          },
          "WriterUnderscoreADLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/allDefs/beta/1598613198473-2020-08-28T11:13:18.473Z/allDefs.zip"
              },
              "FunctionName": "Writer_AD",
              "Handler": "Writer_AD.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "WriterUnderscoreADLogGroup"
            ]
          },
          "WriterUnderscoreADLambdaVersionNdhpzK06kjLmGxwqeY3jntuBCE99yk1NJbEnbMKaE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WriterUnderscoreADLambdaFunction"
              },
              "CodeSha256": "kCjL/iMsbnL7xKx2b7ddCcw/gi5hC89rTLUDY6ueHog="
            }
          },
          "Getter1UnderscoreADLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/allDefs/beta/1598613198473-2020-08-28T11:13:18.473Z/allDefs.zip"
              },
              "FunctionName": "Getter1_AD",
              "Handler": "Getter1_AD.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "Getter1UnderscoreADLogGroup"
            ]
          },
          "Getter1UnderscoreADLambdaVersionjh5HG7GvE2cqku5OuKmwIUgIWVQ6HCYEo9QccgjnptA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Getter1UnderscoreADLambdaFunction"
              },
              "CodeSha256": "kCjL/iMsbnL7xKx2b7ddCcw/gi5hC89rTLUDY6ueHog="
            }
          },
          "Getter2UnderscoreADLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/allDefs/beta/1598613198473-2020-08-28T11:13:18.473Z/allDefs.zip"
              },
              "FunctionName": "Getter2_AD",
              "Handler": "Getter2_AD.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "Getter2UnderscoreADLogGroup"
            ]
          },
          "Getter2UnderscoreADLambdaVersionAKoOEDhPFIAStJFDjSCZuXXjfdVwOtFkM9kdoK6JLU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Getter2UnderscoreADLambdaFunction"
              },
              "CodeSha256": "kCjL/iMsbnL7xKx2b7ddCcw/gi5hC89rTLUDY6ueHog="
            }
          },
          "TableARS": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Table_AD",
              "AttributeDefinitions": [
                {
                  "AttributeName": "myID",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "myID",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "CallerUnderscoreADLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CallerUnderscoreADLambdaVersionUk0Z1Ec5vVqOIKXfPvvvcwhO2zadikJbByRYaQL0"
            }
          },
          "Callee1UnderscoreADLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Callee1UnderscoreADLambdaVersion9uDLZpoj4Q3tu7dUg82lVrjSh1bDDAevR91oG6B8Y"
            }
          },
          "Callee2UnderscoreADLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Callee2UnderscoreADLambdaVersionS9Dt1VHf5eFz8AZXwtJNvWLgRpGkKSnaSdneKbrPgBA"
            }
          },
          "WriterUnderscoreADLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WriterUnderscoreADLambdaVersionNdhpzK06kjLmGxwqeY3jntuBCE99yk1NJbEnbMKaE"
            }
          },
          "Getter1UnderscoreADLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Getter1UnderscoreADLambdaVersionjh5HG7GvE2cqku5OuKmwIUgIWVQ6HCYEo9QccgjnptA"
            }
          },
          "Getter2UnderscoreADLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Getter2UnderscoreADLambdaVersionAKoOEDhPFIAStJFDjSCZuXXjfdVwOtFkM9kdoK6JLU"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "Caller_AD": {
        "handler": "Caller_AD.handler",
        "name": "Caller_AD",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CallerUnderscoreADLambdaVersionUk0Z1Ec5vVqOIKXfPvvvcwhO2zadikJbByRYaQL0"
      },
      "Callee1_AD": {
        "handler": "Callee1_AD.handler",
        "name": "Callee1_AD",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "Callee1UnderscoreADLambdaVersion9uDLZpoj4Q3tu7dUg82lVrjSh1bDDAevR91oG6B8Y"
      },
      "Callee2_AD": {
        "handler": "Callee2_AD.handler",
        "name": "Callee2_AD",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "Callee2UnderscoreADLambdaVersionS9Dt1VHf5eFz8AZXwtJNvWLgRpGkKSnaSdneKbrPgBA"
      },
      "Writer_AD": {
        "handler": "Writer_AD.handler",
        "name": "Writer_AD",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "WriterUnderscoreADLambdaVersionNdhpzK06kjLmGxwqeY3jntuBCE99yk1NJbEnbMKaE"
      },
      "Getter1_AD": {
        "handler": "Getter1_AD.handler",
        "name": "Getter1_AD",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "Getter1UnderscoreADLambdaVersionjh5HG7GvE2cqku5OuKmwIUgIWVQ6HCYEo9QccgjnptA"
      },
      "Getter2_AD": {
        "handler": "Getter2_AD.handler",
        "name": "Getter2_AD",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "Getter2UnderscoreADLambdaVersionAKoOEDhPFIAStJFDjSCZuXXjfdVwOtFkM9kdoK6JLU"
      }
    },
    "resources": {
      "Resources": {
        "TableARS": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Table_AD",
            "AttributeDefinitions": [
              {
                "AttributeName": "myID",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "myID",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/stefan/Desktop/ExampleForCriteria/allDefs/.serverless/allDefs.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/allDefs/beta/1598613198473-2020-08-28T11:13:18.473Z",
    "artifact": "allDefs.zip"
  }
}