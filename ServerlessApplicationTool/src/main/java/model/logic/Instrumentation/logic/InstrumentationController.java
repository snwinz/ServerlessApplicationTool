package model.logic.Instrumentation.logic;

import java.io.IOException;
import java.util.List;

import org.antlr.v4.runtime.ANTLRFileStream;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.ParserRuleContext;

import antlr.InstrumentationIdentifier;
import antlr.autogenerated.JavaScriptLexer;
import antlr.autogenerated.JavaScriptParser;
import model.logic.Instrumentation.Criteria.CoverageCriterion;

public class InstrumentationController {

	public InstrumentationController() {
	}

	public String instrumentWithAntlr(String fileName, List<CoverageCriterion> instrumentators) throws IOException {
		JavaScriptLexer lexer = new JavaScriptLexer(new ANTLRFileStream(fileName));
		CommonTokenStream tokens = new CommonTokenStream(lexer);
		JavaScriptParser parser = new JavaScriptParser(tokens);
		ParserRuleContext program = parser.program();
		InstrumentationIdentifier<Object> visitor = new InstrumentationIdentifier<Object>(tokens, instrumentators);
		visitor.visit(program);
		return visitor.getText();
	}

	

	






}
